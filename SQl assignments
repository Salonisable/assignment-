Q.1 Create a table Result which stores the records of 5 students where the fields as 
    rollno, name, percentage
    
    create table Result2(rollno number,name varchar2(20),percentage number);

select * from Result2;
insert into Result2 values(1 ,'simran',40);
insert into Result2 values(2 ,'saloni',50);
insert into Result2 values(3 ,'simon',60);
insert into Result2 values(4 ,'shalmon',70);
insert into Result2 values(5 ,'petras',80);
select * from result;
===============================================================================================================================================================================
Q.2 Add a column in the Result table named as Grade

alter table Result2 add grade varchar2(20); 
===============================================================================================================================================================================
Q.3 Create a table marks which stores the marks of 5 subjects(physics,chemistry,maths,computer,english) and display the percentage. Store record of 5 students.
 create table percentages(NAME varchar2(10), physics number(3), chemistry number(3), maths number(3), computer number(3), english number(3), percentages  as (((physics + chemistry + maths + computer + english)/500)*100));

     insert into percentages (NAME, physics, chemistry, maths, computer, english) values('saloni', '90', '80', '70', '98', '99');
     insert into percentages (NAME, physics, chemistry, maths, computer, english) values('simi',  '80', '90', '70', '78', '79');
     insert into percentages (NAME, physics, chemistry, maths, computer, english) values('simon',    '70', '60', '80', '98', '89');
     insert into percentages (NAME, physics, chemistry, maths, computer, english) values('jaya', '60', '50', '30', '68', '49');
     insert into percentages (NAME, physics, chemistry, maths, computer, english) values('mohini',  '50', '80', '70', '68', '59');

     select * from percentages;  
===============================================================================================================================================================================
Q.4 Rename the table Result with StudentScore.

alter table result2 rename to studentscore;
select * from studentscore;
desc studentscore;

===============================================================================================================================================================================
Q.5 Create two tables A and B where A has 3 columns and B has 2 columns , Copy last two columns from table A to Table B.
create table A(colum1 number,name varchar2(20),colum2 varchar2(20),colum3 varchar2(20));
 create table B(colum1 number,name varchar2(20),colum2 varchar2(20));
 
 select * from A;
 select * from B;

insert into A values(10,'jay','delhi');
insert into A values(20,'raj','pune');
insert into A values(30,'sam','goa');

select * from A;

insert into B values(10,'jay');
insert into B values(20,'raj');

select * from B;
 
 insert into B(colum1,colum2) select colum1,colum2 from A;
select * from B;
===============================================================================================================================================================================
Q.6 Create a table which stores the information about a product . Fields are pid,pname,pqty,pcost. 
     a) Display records in ascending order of quantity.  
     b) Display records in descending order of product cost.
     c) Display record for the product where the cost is highest.
     d) Display the pid and pname of those products where the pcost is same.
     create table product(pid number,pname varchar2(20),pqut varchar2(20),pcost varchar2(20));
 
insert into product values(101,'toordal','1kg','83',100000);
insert into product values(202,'moogdal','2kg','87',300000);
insert into product values(303,'masoordal','3kg','45',40000);
select * from product; 

select * from product order by pqty asc;
select * from product order by pcost desc;

  select * from product where pcost >87;
  select pid,pname from product where pcost = '40000' 
  ===============================================================================================================================================================================
Q.7 Create a table where insert 5 records like name,dob and city of a customer using single insert query.
create table customersA(name varchar2(20),dod date,city varchar2(20));

select * from customersA

insert all
into customersA(name,dod,city) values('saloni',date '2001-05-14','Pune')
into customersA(name,dod,city) values('simran',date '2022-06-15','Kerala')
into customersA(name,dod,city) values('sushma',date '2014-17-16','Delhi')
into customersA(name,dod,city) values('devdas',date '2013-18-17','UP')
into customersA(name,dod,city) values('simon',date '1998-09-09','Banglore')

select * from dual;
===============================================================================================================================================================================
Q.8 Create a table which stores the salary of 3 employees along with the name and display the names salary wise (highest first).
create table Employees(name varchar2(20),salary number);

insert into Employees values('mohit',11000);
insert into Employees values('rohit',22000);
insert into Employees values('jaya',33000);

select * from Employees;

select * from Employees order by salary desc;
===============================================================================================================================================================================
Q.9 Update the highest salary of the employee in above question to the minimum of all.

update emp3 set salary=10000 where name='Ram';
===============================================================================================================================================================================
Q.10 create a table employee: eid, age, dept, salary. Show name of dept with lowest salary using group by.
 create table EMPLOYEE3(eid number,age number, dept varchar2(20),salary number);
 
insert into EMPLOYEE3(eid,age,dept,salary) values (101,20,'hr',11000);
insert into EMPLOYEE3(eid,age,dept,salary) values (102,30,'techinical',24000);
insert into EMPLOYEE3(eid,age,dept,salary) values (103,40,'non techincal',15000);
insert into EMPLOYEE3(eid,age,dept,salary) values (104,22,'back office',10000);
insert into EMPLOYEE3(eid,age,dept,salary) values (105,24,'techinical',28000);
insert into EMPLOYEE3(eid,age,dept,salary) values (106,28,'non techincal',12000);
select * from EMPLOYEE3;
select dept,min(salary) as "total salary" from Employee group by dept having min(salary)<15000;
===============================================================================================================================================================================
Q.11 Write a query to perform following operations on the table :
      a) Create a table as Population :  State, popoulation
      b) Find minimum population
      c) Find maximum population
      d) find average population
      e) Display name of state population wise in descending order
      f) Display name of state population wise in ascending order
      
       create table population(state varchar2(20), population varchar2(20));

insert all
into population(state,population) values('tamilnaddu',120000000)
into population(state,population) values('Maharashtra',43000000)
into population(state,population) values('rajasthan',17000000)
into population(state,population) values('Krela',22000000)

select * from dual;

select * from population;

select state,min(population)as total_pop from population group by state having min(population)<12000000;
select state,max(population)as total_pop from population group by state having max(population)>430000000;
select avg(population)as total_pop from population;
select * from population order by state desc;
select * from population order by state asc;
 ====================================================================================================================================================================================
Q.12 Create a table ItemSales : Itemname, Sales, city  
     Display the following output (Create a query which displays the Total sales citywise)
      Item           Sales
      ----           -----
      RAM             4
      Hard Disk       3
      Mouse           1
      
create table Itemsales(itemname varchar2(20),sales number,city varchar2(20));

insert into ItemSales values('Keyboard',300,'Delhi');
insert into ItemSales values('Mouse',800,'Pune');
insert into ItemSales values('USB',200,'Mumbai');

select * from ItemSales;

select city,sum(sales) as "total_sales" from Itemsales group by city;

drop table Itemsales;
===============================================================================================================================================================================
Q.13 Make a table which stores the email id and password where password should not be saved if the length is less than 8 character.
create table user1(email varchar2(20),password varchar2(20) check (length(password)>8));

insert into user1 values('ab@123','abcdefghij');
insert into user1 values('ab@123','abc');




===============================================================================================================================================================================
Q.14 Make a table which stores the name and mobile no of customers. where mobile no can not saved in database if the mobile no is less than 10 digits.
create table Customers(name varchar2(20),mobileno number,check (mobileno >=1000000000));

insert into Customers values('vaibhavi',5881798425);
insert into Customers values('sonal',3907654);
insert into Customers values('sai',390);

select * from Customers;
===============================================================================================================================================================================
Q.15 Create a table person which stores the ID,name,email where define ID as primary key.Create another table Birthday which stores date of birth and ID.
     Join both tables and create Foreign key in Birthday.
     
 create table Person(id number primary key,name varchar2(40),eid varchar2(40));
create table Birthday(dob date,id number constraint fk_id references Person(id));

insert into Person values(101,'Priya','priya@gmail.com');
insert into Person values(102,'Neha','neha@gmail.com');


insert into Birthday values(date '2020-12-14',101);
insert into Birthday values(date '2020-10-18',102);

select * from Person;

select * from Birthday;

select P.id,P.name,P.eid,B.dob from Person P,Birthday B where P.id=B.id
 ===============================================================================================================================================================================
Q.16 Create a table where records of an employee is maintained . 
     Fields are EID (primary key), Ename (NOT NULL), officeno (Unique), DateOfJoining(NOT NULL),CompanyName(Default),Salary(Check is : salary > 0)
     Create PersonnelDetails : ID( Foreign Key ) , Addres (NOT NULL), contactno(NOT NULL , UNIQUE) 
     Join Both tables and Display output
     
     create table emprecord1(ENAME varchar2(10) not null, EID number(10) primary key, OFFICENO number(10) unique, 
                    DATEOFJOINING varchar2(10) not null, COMPANYNAME varchar2(20) default 'GO-DIGIT',
                    SALARY number(10) check (SALARY >=0));
                     
insert into emprecord1 values('saloni', '101', '1111', '01-01-2021', 'MD India', '50000');
insert into emprecord1 values('mohini', '102', '1122', '02-02-2022', 'MD India', '40000');                     
insert into emprecord1 values('piyuu', '103', '1133', '03-03-2023', 'MD India', '30000'); 

select * from emprecord1;

create table person1(ID number(10) constraint fk_ID references emprecord1 (EID), ADDRESS varchar2(20) not null, 
                     CONTACTNO number not null unique); 
select * from person1;

insert into person1 values(101,'Pune','77237');

select emprecord1.EID, person1.ADDRESS from emprecord1 inner join person1 on emprecord1.EID=person1.ID;
         
===============================================================================================================================================================================
Q.17  Create a table Students ---- Rollno( Primary Key ), 
                                   Name (NOT NULL)
  
      Create a table College ----- CollegeId ( Primary Key ),
                                   EnrollId (Foreign Key ), 
                                   College Name,
                                   AdmissionDate,
                                   ContactNo

  a) Join these tables and show the output as
                                            RollNo  , Name , College Name , Admission Date , Contact No 
  b) Remove Primary Key constraint from college
  c) Input the details of 5 students for a differnt college
  d)  Group all the students based on collegeName
===============================================================================================================================================================================
Q.18 Create a table which stores PersonName(Not Null),Mobile(Unique),Address.  Create two views v1 and v2 on the table. v1 is read only but v2 is updatable.
      v1 shows personName and Mobile while v2 shows PersonName and Address.
      
      create table MYDATA(PERSONNAME varchar2(10) not null, MOBILENO number(10) unique, ADDRESS varchar2(30));

insert all
           into MYDATA(PERSONNAME,MOBILENO,ADDRESS) values('saloni', '123456789', 'PUNE MAHARASHTRA')
           
           into MYDATA(PERSONNAME,MOBILENO,ADDRESS) values('jojo',  '0987654321', 'MUMBAI MAHARASHTRA')
               
           into MYDATA(PERSONNAME,MOBILENO,ADDRESS) values('nimesh',  '0987575466',  'BEED MAHARASHTRA')
           
           select * from dual;
           
           select * from MYDATA; 
           
           create view v1_per as select * from MYDATA with read only;
           
           create view v2_per as select * from MYDATA;
           
           select PERSONNAME, MOBILENO from v1_per;
           
           select PERSONNAME, ADDRESS from v2_per;    
===============================================================================================================================================================================
Q.19 Create a PL/SQL Block which declares the radius of a circle and make a constant pi and assign values as 3.14 to it. Find the area of circle and Print area.
declare
  r real :=4.5;
  pi constant real :=3.14;
  res real;
 begin
  res :=pi*r*r;
  
 dbms_output.put_line('Area is :' || res);
 end;
===============================================================================================================================================================================
q.20 PRINT ALL ALPHABETS IN UPPERCASE IN DESCENDING ORDER
Declare
str varchar2(20);
ch char(1):='Z';
c char;
i integer;
begin
i := ASCII(ch);
     LOOP   
            IF (i = 64) then
                   exit;
            END IF;
            c := chr(i);
              dbms_output.put_line(c);
            i :=i-1;
       END LOOP;
END;
===============================================================================================================================================================================
Q.21 PRINT ALL APLHABETS FROM a to z IN ASCENDING
set serveroutput on
    Declare
str varchar2(20);
ch char(1):='A';
c char;
i integer;
begin
i := ASCII(ch);
     LOOP   
            IF (i = 91) then
                   exit;
            END IF;
            c := chr(i);
              dbms_output.put_line(c);
            i :=i+1;
       END LOOP;
END;
===============================================================================================================================================================================
Q.22 PRINT ALL EVEN NUMBERS BETWEEN 10 AND 30 USING WHILE LOOP.USE IF CONDITION TO CHECK.
 set serveroutput on

DECLARE 

        A NUMBER :=10;
BEGIN

    WHILE A<=30 LOOP  
    
    IF mod(A,2)=0 THEN
    
    dbms_output.put_line('EVEN NUMBER : '||A);
    
    END IF;
    
    A := A+1; 
    
    END LOOP;
    
END;
===============================================================================================================================================================================
Q.23 PRINT ALPHABETS IN REVERSE ORDER USING FOR LOOP.
set serveroutput on

DECLARE

       V char;
BEGIN

       FOR M IN REVERSE 65..90 

LOOP

       V := CHR(M);

      dbms_output.put_line(V);

END LOOP;

END;
===============================================================================================================================================================================
Q.24 PRINT THE FACTORIAL OF A NUMBER USING FOR LOOP.
===============================================================================================================================================================================
Q.25 Create an array of 5 names and print all names in Capital case.
 set serveroutput on

declare
        s1 varchar2(10) := 'abhijeet';
        s2 varchar2(10) := 'rupali';
        s3 varchar2(10) := 'rajashree';
        s4 varchar2(10) := 'deepraj';
        s5 varchar2(10) := 'sanju';
        
begin
      dbms_output.put_line(upper(s1));
      dbms_output.put_line(upper(s2));
      dbms_output.put_line(upper(s3));
      dbms_output.put_line(upper(s4));
      dbms_output.put_line(upper(s5));
      
      end;
===============================================================================================================================================================================
Q.26 Create an array of 5 names and print all names with length in Capital case.
      "abc" ===>  ABC : 3 
      
           set serveroutput on
DECLARE
TYPE names IS VARRAY(5) OF VARCHAR(20);
nm names;
BEGIN
nm := names('nimesh','abhishek','roma','saloni','hemant');
for k in 1..5 loop
dbms_output.put_line(UPPER(nm(k)) || ':' || length(nm(k)));
end loop;
end;

      ===============================================================================================================================================================================
Q.27 CONVERT A SMALL CASE LETTER TO UPPERCASE AND PRINT IT.

declare
s1 varchar2(20) :='hello world';
s2 varchar2(20) :='india';

begin
dbms_output.put_line(UPPER(s1));
dbms_output.put_line(UPPER(s2));
end;
===============================================================================================================================================================================
Q.28 Create a procedure which accepts one parameter as a radius of circle. Declare pi as constant in the procedure and calculate area of circle & print the area in 
     other PLSQL Block.
     CREATE OR REPLACE PROCEDURE demo_pr6(x1 IN OUT real)  -- Defining a procedure
IS
     pi constant real:= 3.14;
BEGIN
     x1 := pi * x1 *x1;
END;


DECLARE
i real;

BEGIN
    i:=2.3;
    demo_pr6(i);      
    dbms_output.put_line('Area of circle : '||i);
END;

     ===============================================================================================================================================================================
Q.29 create a procedure which accepts a single parameter as a integer and it is defined as IN OUT .Procedure returns the cube of the number.
CREATE OR REPLACE PROCEDURE demo_pr4(x1 IN integer,x2 OUT integer) 
IS
BEGIN
    x2 := x1 * x1 * x1;
END;

 


DECLARE
i integer;
BEGIN
    demo_pr4(5,i);        
    dbms_output.put_line('cube is :'||i);
END;
===============================================================================================================================================================================
Q.30 Create following procedures :
     Employee : eid (primary key),name (Not NULL), age (NOT NULL)
     a) Create a table
     b) Pocedure 2 inserts 5 records where age of employee is greater than 18.
     c) Procedure 3 updates a record based on the employee id.
     d) Procedure 4 deletes a record based on employee id.
     e) Procedure 5 shows all records.
     f) Procedure 6 shows the record based on employee id.
     g) Procedure 7 arranges all records age wise in ascending order.
===============================================================================================================================================================================
Q.31 Create a function which accepts your name as a parameter and age and returns the following string as an output :
     Ex:  Input Name :  abcd 
          Output     :  ABCD 24
           SET SERVEROUTPUT ON

CREATE OR REPLACE FUNCTION F1(NAME in varchar2, AGE in number) RETURN VARCHAR2
IS

BEGIN

      return NAME;
      
END;

CREATE OR REPLACE FUNCTION F2(name in varchar2,age in number) RETURN number
IS

BEGIN

      return AGE;
      
END;

DECLARE

        VV varchar2(10);
        MM varchar2(20);
                
BEGIN

        VV := F1('saloni',19);
        MM := F2('ssimi',20);

        dbms_output.put_line(UPPER(VV) || ' ' || MM);

END;
 ===============================================================================================================================================================================
Q.32 Create a function which is applied on the following table : EMPLOYEE (ename , salary)
     Function will return the avg salary of employees.
     set serveroutput on

create table employees(ENAME varchar2(20), SALARY number(10));

create or replace procedure vm(ENAME in varchar2, SALARY in number)
is
begin
insert into employees values(ENAME, SALARY);
end;

begin
vm('abhijeet', 90000);
vm('rupaki',  80000);
vm('dhiraj', 70000);
vm('tejaswani',  60000);
vm('palavi',  50000);
end;

create or replace function avge return number
as
v number;
begin
select avge(salary) into v from employee;
return v;
end;

declare
m number;
begin
a := avge;
dbms_output.put_line('AVERAGE SALARY IS :' || m);
end;_
     ===============================================================================================================================================================================
Q.33 Create a procedure to see a record of an employee in Q.30 . Make a record variable in the same procedure . Using the record variable show the name and age.
===============================================================================================================================================================================
Q.34 Create a function which accepts one argument as an integer. The function is dividing a number by the argument passed. If the passed number is zero then
     handle zero divide exception.
     ===============================================================================================================================================================================
Q.35 Create a procedure which is inserting a record in a table named as IDCard (name,age,city). IF AGE is less than insertion will not be possible and will generate
     an exception message "Age is less than 18" otherwise insert record in the table and print as "Data saved successfully".
     ===============================================================================================================================================================================
Q.36 Create a table Movie which contains the movie name,release year,rating (1-5). Create a Statement level trigger which is executed after insertion of records.
     Create a Row level trigger on this table which is executed before updating the movie name when movie rating is greater than 0.
     ===============================================================================================================================================================================
Q.37 Create a cursor on the Movie table which displays only those records where Movie rating is more than 3.
===============================================================================================================================================================================
Q.38 Create an Associative Array which maintains the population citywise.
===============================================================================================================================================================================




